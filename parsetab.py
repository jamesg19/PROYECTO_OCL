
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTTleftIGUALACIONDIREFENCIACIONMENORQMENORIGUALMAYORQMAYORIGUALleftMASMENOSleftDIVPORMODULOleftPOTrightUMENOSAND BREAK CADENA CASE CHAR CHART COMILLAS COMILLASIMPLE CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DECREMENTO DEFAULT DIREFENCIACION DIV DOSPUNTOS DOUBLE ELSE ENTERO ESPBARRAINVERTIVA ESPCOMILLAS ESPCOMILLASIMPLE ESPLINEA ESPRETORNO ESPTAB FALSE FOR FUNC HOLA IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LENGTH LLAVE_ABRE LLAVE_CIERRA MAIN MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MODULO NEW NOT NULL OR PARENTESIS_ABRE PARENTESIS_CIERRA POR POT PRINT PTCOMA READ RETURN STRING SWITCH TOLOWER TOUPPER TRUE VAR WHILE\n    instrucciones : instruccion\n\n    \n    instruccion : MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA\n    \n    bloque : variables bloque\n            | variables\n            | if bloque\n            | if\n            | ifelse bloque\n            | ifelse\n            | difelseif bloque\n            | difelseif\n            | switch bloque\n            | switch\n            | while bloque \n            | while\n            | for bloque\n            | for\n\n\n            \n    \n    variables : VAR IDENTIFICADOR finInstruccion\n                | VAR IDENTIFICADOR  IGUAL expresion  finInstruccion\n                | IDENTIFICADOR IGUAL expresion finInstruccion\n                | IDENTIFICADOR IGUAL incremento finInstruccion\n                \n    \n    incremento : INCREMENTO\n                | DECREMENTO\n    \n    expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POT  expresion\n            | expresion MODULO expresion\n            | expresion IGUALACION expresion\n            | expresion DIREFENCIACION expresion\n            | expresion MAYORQ expresion\n            | expresion MENORQ expresion\n            | expresion MAYORIGUAL expresion\n            | expresion MENORIGUAL expresion        \n    \n    expresion : MENOS expresion %prec UMENOS\n                | NOT expresionl %prec NOTT\n\n    \n    expresion : ENTERO\n            | DECIMAL\n            | TRUE\n            | FALSE\n            | IDENTIFICADOR\n            | CADENA\n            | CHART\n    \n    expresionl :  TRUE\n                | FALSE\n                | IDENTIFICADOR\n    \n    if : IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA  \n    \n        condiciones : condiciones IGUALACION condiciones\n                    | condiciones DIREFENCIACION condiciones\n                    | condiciones MAYORQ condiciones\n                    | condiciones MENORQ condiciones\n                    | condiciones MAYORIGUAL condiciones\n                    | condiciones MENORIGUAL condiciones\n                    | condiciones AND condiciones\n                    | condiciones OR condiciones\n                    | condiciones MAS condiciones\n                    | condiciones MENOS condiciones\n                    | condiciones POR condiciones\n                    | condiciones DIV condiciones\n                    | condiciones POT  condiciones\n                    | condiciones MODULO condiciones\n\n\n                    \n    \n    condiciones : NOT expresionll %prec NOTT\n                | MENOS expresion %prec UMENOS\n\n    \n    condiciones : PARENTESIS_ABRE condiciones PARENTESIS_CIERRA\n    \n    expresionll :  TRUE\n                | FALSE\n                | IDENTIFICADOR\n\n    \n    condiciones : ENTERO\n            | DECIMAL\n            | TRUE\n            | FALSE\n            | IDENTIFICADOR\n            | CADENA\n            | CHART\n    \n    ifelse : if else\n    \n    else : ELSE LLAVE_ABRE LLAVE_CIERRA\n    \n    difelseif : if elseif\n                \n    \n    elseif : ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA elseif\n            | ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA else\n            | ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA \n    \n    switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA\n    \n    cases : CASE expresion DOSPUNTOS break cases\n            | CASE expresion DOSPUNTOS break default\n    \n    default : DEFAULT DOSPUNTOS break\n    \n    while : WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE  LLAVE_CIERRA\n    \n    for : FOR PARENTESIS_ABRE condicionfor PARENTESIS_CIERRA  LLAVE_ABRE  LLAVE_CIERRA\n    \n    condicionfor : declaracionfor PTCOMA condiciones PTCOMA actualizacion\n    \n    declaracionfor : VAR IDENTIFICADOR  IGUAL expresion  \n                | IDENTIFICADOR IGUAL expresion \n                | expresion \n    \n    actualizacion : expresion incremento\n                    | \n    \n    break : BREAK finInstruccion\n            | \n    \n    finInstruccion : PTCOMA\n                    |\n    '
    
_lr_action_items = {'MAIN':([0,],[3,]),'$end':([1,2,21,],[0,-1,-2,]),'PARENTESIS_ABRE':([3,17,18,19,20,34,39,56,75,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[4,34,35,36,37,56,75,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'PARENTESIS_CIERRA':([4,43,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,66,67,68,69,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,165,170,174,],[5,-41,-37,-38,-39,-40,-42,-43,-21,-22,97,-68,-69,-70,-71,-72,-73,-74,117,118,119,-35,-36,-44,-45,-46,137,-63,-62,-65,-66,-67,159,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-92,-87,-91,]),'LLAVE_ABRE':([5,26,97,117,118,119,159,175,],[6,38,138,153,154,155,167,38,]),'VAR':([6,8,9,10,11,12,13,14,24,25,32,37,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,160,163,164,168,172,176,177,],[15,15,15,15,15,15,15,15,-75,-77,-96,71,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-47,-85,-86,-81,-80,-78,-79,]),'IDENTIFICADOR':([6,8,9,10,11,12,13,14,15,24,25,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,157,160,162,163,164,165,168,172,176,177,],[16,16,16,16,16,16,16,16,32,-75,-77,-96,43,64,43,43,72,-17,43,-95,-41,-96,-96,43,95,-37,-38,-39,-40,-42,-43,-21,-22,64,43,116,121,-76,64,-96,-19,43,43,43,43,43,43,43,43,43,43,43,43,-20,-35,-36,-44,-45,-46,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,43,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,43,-47,43,-85,-86,43,-81,-80,-78,-79,]),'IF':([6,8,9,10,11,12,13,14,24,25,26,32,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,160,163,164,168,172,175,176,177,],[17,17,17,17,17,17,17,17,-75,-77,39,-96,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-47,-85,-86,-81,-80,39,-78,-79,]),'SWITCH':([6,8,9,10,11,12,13,14,24,25,32,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,160,163,164,168,172,176,177,],[18,18,18,18,18,18,18,18,-75,-77,-96,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-47,-85,-86,-81,-80,-78,-79,]),'WHILE':([6,8,9,10,11,12,13,14,24,25,32,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,160,163,164,168,172,176,177,],[19,19,19,19,19,19,19,19,-75,-77,-96,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-47,-85,-86,-81,-80,-78,-79,]),'FOR':([6,8,9,10,11,12,13,14,24,25,32,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,160,163,164,168,172,176,177,],[20,20,20,20,20,20,20,20,-75,-77,-96,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-47,-85,-86,-81,-80,-78,-79,]),'LLAVE_CIERRA':([7,8,9,10,11,12,13,14,22,23,24,25,27,28,29,30,31,32,38,40,42,43,44,45,48,49,50,51,52,53,54,55,74,76,77,90,91,92,93,94,95,124,125,126,127,128,129,130,131,132,133,134,135,136,138,154,155,160,161,163,164,167,168,172,176,177,179,180,181,183,184,185,],[21,-4,-6,-8,-10,-12,-14,-16,-3,-5,-75,-77,-7,-9,-11,-13,-15,-96,74,-17,-95,-41,-96,-96,-37,-38,-39,-40,-42,-43,-21,-22,-76,-96,-19,-20,-35,-36,-44,-45,-46,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,160,163,164,-47,168,-85,-86,172,-81,-80,-78,-79,-96,-82,-83,-93,-94,-84,]),'ELSE':([9,160,172,],[26,-47,175,]),'IGUAL':([16,32,72,121,],[33,41,122,157,]),'PTCOMA':([32,43,44,45,48,49,50,51,52,53,54,55,60,61,62,63,64,65,66,70,72,73,76,91,92,93,94,95,112,113,114,115,116,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,179,],[42,-41,42,42,-37,-38,-39,-40,-42,-43,-21,-22,-68,-69,-70,-71,-72,-73,-74,120,-41,-90,42,-35,-36,-44,-45,-46,-63,-62,-65,-66,-67,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,165,-89,-88,42,]),'MENOS':([33,34,35,36,37,41,43,44,46,48,49,50,51,52,53,56,57,58,60,61,62,63,64,65,66,67,68,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,162,165,166,169,171,],[46,58,46,46,46,46,-41,79,46,-37,-38,-39,-40,-42,-43,58,107,46,-68,-69,-70,-71,-72,-73,-74,79,79,-41,79,58,79,46,46,46,46,46,46,46,46,46,46,46,46,-35,-36,-44,-45,-46,107,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-63,-62,-65,-66,-67,58,46,107,-23,-24,-25,-26,-27,-28,79,79,79,79,79,79,-64,107,107,107,107,107,107,107,107,-56,-57,-58,-59,-60,-61,107,46,79,46,46,79,79,79,]),'NOT':([33,34,35,36,37,41,46,56,58,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[47,59,47,47,47,47,47,59,47,59,47,47,47,47,47,47,47,47,47,47,47,47,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,47,47,47,47,]),'ENTERO':([33,34,35,36,37,41,46,56,58,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[48,60,48,48,48,48,48,60,48,60,48,48,48,48,48,48,48,48,48,48,48,48,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,48,48,48,48,]),'DECIMAL':([33,34,35,36,37,41,46,56,58,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[49,61,49,49,49,49,49,61,49,61,49,49,49,49,49,49,49,49,49,49,49,49,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,49,49,49,49,]),'TRUE':([33,34,35,36,37,41,46,47,56,58,59,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[50,62,50,50,50,50,50,93,62,50,114,62,50,50,50,50,50,50,50,50,50,50,50,50,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,50,50,50,50,]),'FALSE':([33,34,35,36,37,41,46,47,56,58,59,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[51,63,51,51,51,51,51,94,63,51,115,63,51,51,51,51,51,51,51,51,51,51,51,51,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,51,51,51,51,]),'CADENA':([33,34,35,36,37,41,46,56,58,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[52,65,52,52,52,52,52,65,52,65,52,52,52,52,52,52,52,52,52,52,52,52,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,52,52,52,52,]),'CHART':([33,34,35,36,37,41,46,56,58,75,78,79,80,81,82,83,84,85,86,87,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,122,157,162,165,],[53,66,53,53,53,53,53,66,53,66,53,53,53,53,53,53,53,53,53,53,53,53,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,53,53,53,53,]),'INCREMENTO':([33,43,48,49,50,51,52,53,91,92,93,94,95,125,126,127,128,129,130,131,132,133,134,135,136,171,],[54,-41,-37,-38,-39,-40,-42,-43,-35,-36,-44,-45,-46,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,54,]),'DECREMENTO':([33,43,48,49,50,51,52,53,91,92,93,94,95,125,126,127,128,129,130,131,132,133,134,135,136,171,],[55,-41,-37,-38,-39,-40,-42,-43,-35,-36,-44,-45,-46,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,55,]),'CASE':([42,153,173,178,179,183,],[-95,162,-94,162,-96,-93,]),'DEFAULT':([42,173,178,179,183,],[-95,-94,182,-96,-93,]),'MAS':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,78,-37,-38,-39,-40,-42,-43,106,-68,-69,-70,-71,-72,-73,-74,78,78,-41,78,78,-35,-36,-44,-45,-46,106,-63,-62,-65,-66,-67,106,-23,-24,-25,-26,-27,-28,78,78,78,78,78,78,-64,106,106,106,106,106,106,106,106,-56,-57,-58,-59,-60,-61,106,78,78,78,78,]),'POR':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,80,-37,-38,-39,-40,-42,-43,108,-68,-69,-70,-71,-72,-73,-74,80,80,-41,80,80,-35,-36,-44,-45,-46,108,-63,-62,-65,-66,-67,108,80,80,-25,-26,-27,-28,80,80,80,80,80,80,-64,108,108,108,108,108,108,108,108,108,108,-58,-59,-60,-61,108,80,80,80,80,]),'DIV':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,81,-37,-38,-39,-40,-42,-43,109,-68,-69,-70,-71,-72,-73,-74,81,81,-41,81,81,-35,-36,-44,-45,-46,109,-63,-62,-65,-66,-67,109,81,81,-25,-26,-27,-28,81,81,81,81,81,81,-64,109,109,109,109,109,109,109,109,109,109,-58,-59,-60,-61,109,81,81,81,81,]),'POT':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,82,-37,-38,-39,-40,-42,-43,110,-68,-69,-70,-71,-72,-73,-74,82,82,-41,82,82,-35,-36,-44,-45,-46,110,-63,-62,-65,-66,-67,110,82,82,82,82,-27,82,82,82,82,82,82,82,-64,110,110,110,110,110,110,110,110,110,110,110,110,-60,110,110,82,82,82,82,]),'MODULO':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,83,-37,-38,-39,-40,-42,-43,111,-68,-69,-70,-71,-72,-73,-74,83,83,-41,83,83,-35,-36,-44,-45,-46,111,-63,-62,-65,-66,-67,111,83,83,-25,-26,-27,-28,83,83,83,83,83,83,-64,111,111,111,111,111,111,111,111,111,111,-58,-59,-60,-61,111,83,83,83,83,]),'IGUALACION':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,84,-37,-38,-39,-40,-42,-43,98,-68,-69,-70,-71,-72,-73,-74,84,84,-41,84,84,-35,-36,-44,-45,-46,98,-63,-62,-65,-66,-67,98,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,98,98,-56,-57,-58,-59,-60,-61,98,84,84,84,84,]),'DIREFENCIACION':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,85,-37,-38,-39,-40,-42,-43,99,-68,-69,-70,-71,-72,-73,-74,85,85,-41,85,85,-35,-36,-44,-45,-46,99,-63,-62,-65,-66,-67,99,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,99,99,-56,-57,-58,-59,-60,-61,99,85,85,85,85,]),'MAYORQ':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,86,-37,-38,-39,-40,-42,-43,100,-68,-69,-70,-71,-72,-73,-74,86,86,-41,86,86,-35,-36,-44,-45,-46,100,-63,-62,-65,-66,-67,100,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,100,100,-56,-57,-58,-59,-60,-61,100,86,86,86,86,]),'MENORQ':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,87,-37,-38,-39,-40,-42,-43,101,-68,-69,-70,-71,-72,-73,-74,87,87,-41,87,87,-35,-36,-44,-45,-46,101,-63,-62,-65,-66,-67,101,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,101,101,-56,-57,-58,-59,-60,-61,101,87,87,87,87,]),'MAYORIGUAL':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,88,-37,-38,-39,-40,-42,-43,102,-68,-69,-70,-71,-72,-73,-74,88,88,-41,88,88,-35,-36,-44,-45,-46,102,-63,-62,-65,-66,-67,102,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,102,102,-56,-57,-58,-59,-60,-61,102,88,88,88,88,]),'MENORIGUAL':([43,44,48,49,50,51,52,53,57,60,61,62,63,64,65,66,67,68,72,73,76,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,158,166,169,171,],[-41,89,-37,-38,-39,-40,-42,-43,103,-68,-69,-70,-71,-72,-73,-74,89,89,-41,89,89,-35,-36,-44,-45,-46,103,-63,-62,-65,-66,-67,103,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,103,103,-56,-57,-58,-59,-60,-61,103,89,89,89,89,]),'AND':([43,48,49,50,51,52,53,57,60,61,62,63,64,65,66,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,],[-41,-37,-38,-39,-40,-42,-43,104,-68,-69,-70,-71,-72,-73,-74,-35,-36,-44,-45,-46,104,-63,-62,-65,-66,-67,104,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,-54,104,-56,-57,-58,-59,-60,-61,104,]),'OR':([43,48,49,50,51,52,53,57,60,61,62,63,64,65,66,91,92,93,94,95,96,112,113,114,115,116,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,],[-41,-37,-38,-39,-40,-42,-43,105,-68,-69,-70,-71,-72,-73,-74,-35,-36,-44,-45,-46,105,-63,-62,-65,-66,-67,105,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-64,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,105,]),'DOSPUNTOS':([43,48,49,50,51,52,53,91,92,93,94,95,125,126,127,128,129,130,131,132,133,134,135,136,169,182,],[-41,-37,-38,-39,-40,-42,-43,-35,-36,-44,-45,-46,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,173,184,]),'BREAK':([173,184,],[179,179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'instruccion':([0,],[2,]),'bloque':([6,8,9,10,11,12,13,14,],[7,22,23,27,28,29,30,31,]),'variables':([6,8,9,10,11,12,13,14,],[8,8,8,8,8,8,8,8,]),'if':([6,8,9,10,11,12,13,14,],[9,9,9,9,9,9,9,9,]),'ifelse':([6,8,9,10,11,12,13,14,],[10,10,10,10,10,10,10,10,]),'difelseif':([6,8,9,10,11,12,13,14,],[11,11,11,11,11,11,11,11,]),'switch':([6,8,9,10,11,12,13,14,],[12,12,12,12,12,12,12,12,]),'while':([6,8,9,10,11,12,13,14,],[13,13,13,13,13,13,13,13,]),'for':([6,8,9,10,11,12,13,14,],[14,14,14,14,14,14,14,14,]),'else':([9,172,],[24,177,]),'elseif':([9,172,],[25,176,]),'finInstruccion':([32,44,45,76,179,],[40,77,90,124,183,]),'expresion':([33,35,36,37,41,46,58,78,79,80,81,82,83,84,85,86,87,88,89,122,157,162,165,],[44,67,68,73,76,91,112,125,126,127,128,129,130,131,132,133,134,135,136,158,166,169,171,]),'incremento':([33,171,],[45,174,]),'condiciones':([34,56,75,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[57,96,123,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,]),'condicionfor':([37,],[69,]),'declaracionfor':([37,],[70,]),'expresionl':([47,],[92,]),'expresionll':([59,],[113,]),'cases':([153,178,],[161,180,]),'actualizacion':([165,],[170,]),'break':([173,184,],[178,185,]),'default':([178,],[181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instruccion','instrucciones',1,'p_inicio','grammar.py',245),
  ('instruccion -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloque LLAVE_CIERRA','instruccion',6,'p_main','grammar.py',251),
  ('bloque -> variables bloque','bloque',2,'p_declaraciones','grammar.py',255),
  ('bloque -> variables','bloque',1,'p_declaraciones','grammar.py',256),
  ('bloque -> if bloque','bloque',2,'p_declaraciones','grammar.py',257),
  ('bloque -> if','bloque',1,'p_declaraciones','grammar.py',258),
  ('bloque -> ifelse bloque','bloque',2,'p_declaraciones','grammar.py',259),
  ('bloque -> ifelse','bloque',1,'p_declaraciones','grammar.py',260),
  ('bloque -> difelseif bloque','bloque',2,'p_declaraciones','grammar.py',261),
  ('bloque -> difelseif','bloque',1,'p_declaraciones','grammar.py',262),
  ('bloque -> switch bloque','bloque',2,'p_declaraciones','grammar.py',263),
  ('bloque -> switch','bloque',1,'p_declaraciones','grammar.py',264),
  ('bloque -> while bloque','bloque',2,'p_declaraciones','grammar.py',265),
  ('bloque -> while','bloque',1,'p_declaraciones','grammar.py',266),
  ('bloque -> for bloque','bloque',2,'p_declaraciones','grammar.py',267),
  ('bloque -> for','bloque',1,'p_declaraciones','grammar.py',268),
  ('variables -> VAR IDENTIFICADOR finInstruccion','variables',3,'p_variables','grammar.py',276),
  ('variables -> VAR IDENTIFICADOR IGUAL expresion finInstruccion','variables',5,'p_variables','grammar.py',277),
  ('variables -> IDENTIFICADOR IGUAL expresion finInstruccion','variables',4,'p_variables','grammar.py',278),
  ('variables -> IDENTIFICADOR IGUAL incremento finInstruccion','variables',4,'p_variables','grammar.py',279),
  ('incremento -> INCREMENTO','incremento',1,'p_incrementos','grammar.py',284),
  ('incremento -> DECREMENTO','incremento',1,'p_incrementos','grammar.py',285),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',289),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',290),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',291),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','grammar.py',292),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','grammar.py',293),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','grammar.py',294),
  ('expresion -> expresion IGUALACION expresion','expresion',3,'p_expresion_binaria','grammar.py',295),
  ('expresion -> expresion DIREFENCIACION expresion','expresion',3,'p_expresion_binaria','grammar.py',296),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',297),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',298),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',299),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',300),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',304),
  ('expresion -> NOT expresionl','expresion',2,'p_expresion_unaria','grammar.py',305),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitivo','grammar.py',311),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitivo','grammar.py',312),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitivo','grammar.py',313),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitivo','grammar.py',314),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_primitivo','grammar.py',315),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitivo','grammar.py',316),
  ('expresion -> CHART','expresion',1,'p_expresion_primitivo','grammar.py',317),
  ('expresionl -> TRUE','expresionl',1,'p_expresion_logicap','grammar.py',322),
  ('expresionl -> FALSE','expresionl',1,'p_expresion_logicap','grammar.py',323),
  ('expresionl -> IDENTIFICADOR','expresionl',1,'p_expresion_logicap','grammar.py',324),
  ('if -> IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','if',6,'p_if1','grammar.py',329),
  ('condiciones -> condiciones IGUALACION condiciones','condiciones',3,'p_condicionif','grammar.py',334),
  ('condiciones -> condiciones DIREFENCIACION condiciones','condiciones',3,'p_condicionif','grammar.py',335),
  ('condiciones -> condiciones MAYORQ condiciones','condiciones',3,'p_condicionif','grammar.py',336),
  ('condiciones -> condiciones MENORQ condiciones','condiciones',3,'p_condicionif','grammar.py',337),
  ('condiciones -> condiciones MAYORIGUAL condiciones','condiciones',3,'p_condicionif','grammar.py',338),
  ('condiciones -> condiciones MENORIGUAL condiciones','condiciones',3,'p_condicionif','grammar.py',339),
  ('condiciones -> condiciones AND condiciones','condiciones',3,'p_condicionif','grammar.py',340),
  ('condiciones -> condiciones OR condiciones','condiciones',3,'p_condicionif','grammar.py',341),
  ('condiciones -> condiciones MAS condiciones','condiciones',3,'p_condicionif','grammar.py',342),
  ('condiciones -> condiciones MENOS condiciones','condiciones',3,'p_condicionif','grammar.py',343),
  ('condiciones -> condiciones POR condiciones','condiciones',3,'p_condicionif','grammar.py',344),
  ('condiciones -> condiciones DIV condiciones','condiciones',3,'p_condicionif','grammar.py',345),
  ('condiciones -> condiciones POT condiciones','condiciones',3,'p_condicionif','grammar.py',346),
  ('condiciones -> condiciones MODULO condiciones','condiciones',3,'p_condicionif','grammar.py',347),
  ('condiciones -> NOT expresionll','condiciones',2,'p_expresion_unarialog','grammar.py',354),
  ('condiciones -> MENOS expresion','condiciones',2,'p_expresion_unarialog','grammar.py',355),
  ('condiciones -> PARENTESIS_ABRE condiciones PARENTESIS_CIERRA','condiciones',3,'p_expresion_agrupacion','grammar.py',360),
  ('expresionll -> TRUE','expresionll',1,'p_expresion_logicall','grammar.py',365),
  ('expresionll -> FALSE','expresionll',1,'p_expresion_logicall','grammar.py',366),
  ('expresionll -> IDENTIFICADOR','expresionll',1,'p_expresion_logicall','grammar.py',367),
  ('condiciones -> ENTERO','condiciones',1,'p_condicionif2','grammar.py',372),
  ('condiciones -> DECIMAL','condiciones',1,'p_condicionif2','grammar.py',373),
  ('condiciones -> TRUE','condiciones',1,'p_condicionif2','grammar.py',374),
  ('condiciones -> FALSE','condiciones',1,'p_condicionif2','grammar.py',375),
  ('condiciones -> IDENTIFICADOR','condiciones',1,'p_condicionif2','grammar.py',376),
  ('condiciones -> CADENA','condiciones',1,'p_condicionif2','grammar.py',377),
  ('condiciones -> CHART','condiciones',1,'p_condicionif2','grammar.py',378),
  ('ifelse -> if else','ifelse',2,'p_ifelse','grammar.py',382),
  ('else -> ELSE LLAVE_ABRE LLAVE_CIERRA','else',3,'p_else','grammar.py',386),
  ('difelseif -> if elseif','difelseif',2,'p_difelseif','grammar.py',390),
  ('elseif -> ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA elseif','elseif',8,'p_els','grammar.py',395),
  ('elseif -> ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA else','elseif',8,'p_els','grammar.py',396),
  ('elseif -> ELSE IF PARENTESIS_ABRE condiciones PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','elseif',7,'p_els','grammar.py',397),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA','switch',7,'p_switch','grammar.py',401),
  ('cases -> CASE expresion DOSPUNTOS break cases','cases',5,'p_cases','grammar.py',405),
  ('cases -> CASE expresion DOSPUNTOS break default','cases',5,'p_cases','grammar.py',406),
  ('default -> DEFAULT DOSPUNTOS break','default',3,'p_default','grammar.py',410),
  ('while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','while',6,'p_while','grammar.py',414),
  ('for -> FOR PARENTESIS_ABRE condicionfor PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','for',6,'p_for','grammar.py',418),
  ('condicionfor -> declaracionfor PTCOMA condiciones PTCOMA actualizacion','condicionfor',5,'p_forcondiciones','grammar.py',422),
  ('declaracionfor -> VAR IDENTIFICADOR IGUAL expresion','declaracionfor',4,'p_declaracionfor','grammar.py',426),
  ('declaracionfor -> IDENTIFICADOR IGUAL expresion','declaracionfor',3,'p_declaracionfor','grammar.py',427),
  ('declaracionfor -> expresion','declaracionfor',1,'p_declaracionfor','grammar.py',428),
  ('actualizacion -> expresion incremento','actualizacion',2,'p_actualizacionfor','grammar.py',432),
  ('actualizacion -> <empty>','actualizacion',0,'p_actualizacionfor','grammar.py',433),
  ('break -> BREAK finInstruccion','break',2,'p_break','grammar.py',438),
  ('break -> <empty>','break',0,'p_break','grammar.py',439),
  ('finInstruccion -> PTCOMA','finInstruccion',1,'p_finInstruccion','grammar.py',443),
  ('finInstruccion -> <empty>','finInstruccion',0,'p_finInstruccion','grammar.py',444),
]
